import streamlit as st

# ---------------------------
# 전체 118개 원소 데이터
# (번호, 기호, 이름, 족, 주기, 분류)
# ---------------------------
elements = [
    (1, "H", "수소", 1, 1, "비금속"), (2, "He", "헬륨", 18, 1, "비금속"),
    (3, "Li", "리튬", 1, 2, "금속"), (4, "Be", "베릴륨", 2, 2, "금속"),
    (5, "B", "붕소", 13, 2, "준금속"), (6, "C", "탄소", 14, 2, "비금속"),
    (7, "N", "질소", 15, 2, "비금속"), (8, "O", "산소", 16, 2, "비금속"),
    (9, "F", "플루오린", 17, 2, "비금속"), (10, "Ne", "네온", 18, 2, "비금속"),
    (11, "Na", "나트륨", 1, 3, "금속"), (12, "Mg", "마그네슘", 2, 3, "금속"),
    (13, "Al", "알루미늄", 13, 3, "금속"), (14, "Si", "규소", 14, 3, "준금속"),
    (15, "P", "인", 15, 3, "비금속"), (16, "S", "황", 16, 3, "비금속"),
    (17, "Cl", "염소", 17, 3, "비금속"), (18, "Ar", "아르곤", 18, 3, "비금속"),
    (19, "K", "칼륨", 1, 4, "금속"), (20, "Ca", "칼슘", 2, 4, "금속"),
    (21, "Sc", "스칸듐", 3, 4, "금속"), (22, "Ti", "타이타늄", 4, 4, "금속"),
    (23, "V", "바나듐", 5, 4, "금속"), (24, "Cr", "크로뮴", 6, 4, "금속"),
    (25, "Mn", "망간", 7, 4, "금속"), (26, "Fe", "철", 8, 4, "금속"),
    (27, "Co", "코발트", 9, 4, "금속"), (28, "Ni", "니켈", 10, 4, "금속"),
    (29, "Cu", "구리", 11, 4, "금속"), (30, "Zn", "아연", 12, 4, "금속"),
    (31, "Ga", "갈륨", 13, 4, "금속"), (32, "Ge", "게르마늄", 14, 4, "준금속"),
    (33, "As", "비소", 15, 4, "준금속"), (34, "Se", "셀레늄", 16, 4, "비금속"),
    (35, "Br", "브로민", 17, 4, "비금속"), (36, "Kr", "크립톤", 18, 4, "비금속"),
    (37, "Rb", "루비듐", 1, 5, "금속"), (38, "Sr", "스트론튬", 2, 5, "금속"),
    (39, "Y", "이트륨", 3, 5, "금속"), (40, "Zr", "지르코늄", 4, 5, "금속"),
    (41, "Nb", "나이오븀", 5, 5, "금속"), (42, "Mo", "몰리브데넘", 6, 5, "금속"),
    (43, "Tc", "테크네튬", 7, 5, "금속"), (44, "Ru", "루테늄", 8, 5, "금속"),
    (45, "Rh", "로듐", 9, 5, "금속"), (46, "Pd", "팔라듐", 10, 5, "금속"),
    (47, "Ag", "은", 11, 5, "금속"), (48, "Cd", "카드뮴", 12, 5, "금속"),
    (49, "In", "인듐", 13, 5, "금속"), (50, "Sn", "주석", 14, 5, "금속"),
    (51, "Sb", "안티몬", 15, 5, "준금속"), (52, "Te", "텔루륨", 16, 5, "준금속"),
    (53, "I", "아이오딘", 17, 5, "비금속"), (54, "Xe", "제논", 18, 5, "비금속"),
    (55, "Cs", "세슘", 1, 6, "금속"), (56, "Ba", "바륨", 2, 6, "금속"),
    (57, "La", "란타넘", 3, 6, "금속"), (58, "Ce", "세륨", 3, 6, "금속"),
    (59, "Pr", "프라세오디뮴", 3, 6, "금속"), (60, "Nd", "네오디뮴", 3, 6, "금속"),
    (61, "Pm", "프로메튬", 3, 6, "금속"), (62, "Sm", "사마륨", 3, 6, "금속"),
    (63, "Eu", "유로퓸", 3, 6, "금속"), (64, "Gd", "가돌리늄", 3, 6, "금속"),
    (65, "Tb", "테르븀", 3, 6, "금속"), (66, "Dy", "디스프로슘", 3, 6, "금속"),
    (67, "Ho", "홀뮴", 3, 6, "금속"), (68, "Er", "어븀", 3, 6, "금속"),
    (69, "Tm", "툴륨", 3, 6, "금속"), (70, "Yb", "이터븀", 3, 6, "금속"),
    (71, "Lu", "루테튬", 3, 6, "금속"),
    (72, "Hf", "하프늄", 4, 6, "금속"), (73, "Ta", "탄탈럼", 5, 6, "금속"),
    (74, "W", "텅스텐", 6, 6, "금속"), (75, "Re", "레늄", 7, 6, "금속"),
    (76, "Os", "오스뮴", 8, 6, "금속"), (77, "Ir", "이리듐", 9, 6, "금속"),
    (78, "Pt", "백금", 10, 6, "금속"), (79, "Au", "금", 11, 6, "금속"),
    (80, "Hg", "수은", 12, 6, "금속"), (81, "Tl", "탈륨", 13, 6, "금속"),
    (82, "Pb", "납", 14, 6, "금속"), (83, "Bi", "비스무트", 15, 6, "금속"),
    (84, "Po", "폴로늄", 16, 6, "준금속"), (85, "At", "아스타틴", 17, 6, "준금속"),
    (86, "Rn", "라돈", 18, 6, "비금속"),
    (87, "Fr", "프랑슘", 1, 7, "금속"), (88, "Ra", "라듐", 2, 7, "금속"),
    (89, "Ac", "악티늄", 3, 7, "금속"), (90, "Th", "토륨", 3, 7, "금속"),
    (91, "Pa", "프로트악티늄", 3, 7, "금속"), (92, "U", "우라늄", 3, 7, "금속"),
    (93, "Np", "넵투늄", 3, 7, "금속"), (94, "Pu", "플루토늄", 3, 7, "금속"),
    (95, "Am", "아메리슘", 3, 7, "금속"), (96, "Cm", "퀴륨", 3, 7, "금속"),
    (97, "Bk", "버클륨", 3, 7, "금속"), (98, "Cf", "칼리포늄", 3, 7, "금속"),
    (99, "Es", "아인슈타이늄", 3, 7, "금속"), (100, "Fm", "페르뮴", 3, 7, "금속"),
    (101, "Md", "멘델레븀", 3, 7, "금속"), (102, "No", "노벨륨", 3, 7, "금속"),
    (103, "Lr", "로렌슘", 3, 7, "금속"),
    (104, "Rf", "러더퍼듐", 4, 7, "금속"), (105, "Db", "더브늄", 5, 7, "금속"),
    (106, "Sg", "시보귬", 6, 7, "금속"), (107, "Bh", "보륨", 7, 7, "금속"),
    (108, "Hs", "하슘", 8, 7, "금속"), (109, "Mt", "마이트너륨", 9, 7, "금속"),
    (110, "Ds", "다름슈타튬", 10, 7, "금속"), (111, "Rg", "뢴트게늄", 11, 7, "금속"),
    (112, "Cn", "코페르니슘", 12, 7, "금속"), (113, "Nh", "니호늄", 13, 7, "금속"),
    (114, "Fl", "플레로븀", 14, 7, "금속"), (115, "Mc", "모스코븀", 15, 7, "금속"),
    (116, "Lv", "리버모륨", 16, 7, "금속"), (117, "Ts", "테네신", 17, 7, "비금속"),
    (118, "Og", "오가네손", 18, 7, "비금속")
]

# ---------------------------
# 결합 판별 함수
# ---------------------------
def get_bond_type(e1, e2):
    metals = [e[1] for e in elements if e[5] == "금속"]
    non_metals = [e[1] for e in elements if e[5] == "비금속"]
    
    if (e1 in metals and e2 in non_metals) or (e2 in metals and e1 in non_metals):
        return "이온 결합", "금속과 비금속이 전자를 주고받아 형성", "ionic.png"
    elif (e1 in metals and e2 in metals):
        return "금속 결합", "금속 원자핵과 전자의 바다 상호작용", "metallic.png"
    else:
        return "공유 결합", "비금속 원소들이 전자를 공유하여 분자 형성", "covalent.png"

# ---------------------------
# 색상 지정
# ---------------------------
def get_color(category):
    if category == "금속":
        return "#64B5F6"   # 파란 계열 (금속)
    elif category == "비금속":
        return "#1976D2"   # 진한 파랑 (비금속)
    else:
        return "#90CAF9"   # 연한 파랑 (준금속)

# ---------------------------
# 배경 스타일
# ---------------------------
st.markdown("""
    <style>
    .stApp {
        background-color: #E3F2FD;
    }
    </style>
""", unsafe_allow_html=True)

# ---------------------------
# UI
# ---------------------------
st.title("🔬 주기율표 원소 결합 탐구 (118개 원소)")
st.write("원소 두 개를 선택하면 결합 종류와 특징, 그리고 교과서 삽화 모형이 나타납니다!")

if "selected" not in st.session_state:
    st.session_state.selected = []

max_group = 18
for period in range(1, 8):  
    cols = st.columns(max_group)
    for group in range(1, max_group + 1):
        element = next((e for e in elements if e[3] == group and e[4] == period), None)
        if element:
            color = get_color(element[5])
            if cols[group-1].button(element[1], key=f"{element[1]}_{period}_{group}"):
                if len(st.session_state.selected) < 2:
                    st.session_state.selected.append(element[1])
                else:
                    st.session_state.selected = [element[1]]

# 선택된 원소 표시
if st.session_state.selected:
    st.write("선택된 원소:", " - ".join(st.session_state.selected))

# 결합 결과
if len(st.session_state.selected) == 2:
    e1, e2 = st.session_state.selected
    bond_type, desc, img = get_bond_type(e1, e2)
    st.subheader(f"💡 {e1} - {e2} 의 결합")
    st.write(f"결합 종류: **{bond_type}**")
    st.write(f"특징: {desc}")
    st.image(img, caption=f"{bond_type} 모형", use_column_width=True)
